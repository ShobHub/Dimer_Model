import collections
import networkx as nx
import matplotlib.pyplot as plt  #import matplotlib.pylab as plt
from scipy.stats import linregress
from matplotlib.pyplot import pause
import matplotlib.cm as cm
import matplotlib.colors as mcolors
import seaborn as sns
import numpy as np
import pickle
import random
import pylab

class EWorm():
	def __init__(self,M,PL_HC,g,e,T,V,w_sq,w_o):
		self.M = M
		self.PL_HC = PL_HC
		self.g = g
		self.bn,self.tn = nx.bipartite.sets(g)
		self.e = e
		self.Nodes = list(g.nodes())
		self.T = T
		self.V = V
		self.w_sq = w_sq
		self.w_o = w_o

	def plotG(self,s0,si,sj):
		EC=[]
		W=[]
		for u,v in self.g.edges():
			if(((u,v) in self.M or (v,u) in self.M) and ((u,v) in self.e or (v,u) in self.e)):
				EC.append((1,0,0,0.5))
				W.append(2.5)
			elif((u,v) in self.M or (v,u) in self.M):
				EC.append('purple')
				W.append(1.8)
			else:
				EC.append('black')
				W.append(0.8)
		NC = []
		w = []
		for u in self.g.nodes():
			if (u==si):
				NC.append('red')
				w.append(30)
			elif (u==sj):
				NC.append('green')
				w.append(30)
			elif (u==s0):    #in s0):
				NC.append('blue')
				w.append(30)
			else:
				NC.append('steelblue')
				w.append(2)
		# pylab.ion()
		# plt.clf()
		nx.draw(self.g,pos=pos,node_size=w,edge_color=EC,width=W,node_color=NC) #,with_labels=True,font_size=6)
		# pause(2)
		# pylab.show()
		plt.show()

	def NoFP(self, pl, mm, wsq, wo):
		c = 0
		fpl = []
		for i in pl:
			mn = mm.copy()
			for a, b in i:
				if ((a, b) in self.M or (b, a) in self.M):
					mn.extend([a, b])
			if set(collections.Counter(mn).values()) == {1} and len(set(mn)) == len(i):
				if len(i) == 4:
					c += np.exp(-wsq/self.T)
				else:
					c += np.exp(-wo/self.T)
				fpl.append(i)
		return c,fpl

	def weights(self,u,v):
		pl = []
		for i in self.PL_HC:
			if((u,v) in i or (v,u) in i):
				pl.append(i)
		return self.NoFP(pl,[u,v],self.w_sq,self.w_o)[0]

	def InM(self, u):
		for p,q in self.M:
			if (p == u):
				return (p,q),q
			elif (q == u):
				return (p,q),p

	def OrdP(self):
		ts = 0
		fs = 0
		to = 0
		fo = 0
		for i in self.PL_HC:
			if len(i) == 4:
				ts += 1
				if self.NoFP([i], [], 0, 0)[0] == 1:
					fs += 1
			else:
				to += 1
				if self.NoFP([i], [], 0, 0)[0] == 1:
					fo += 1
		return fs,ts,fo,to

	def worm_single(self,k,i,i0,visit):
		count = 0
		while k != i0:
			dim, j = self.InM(i)
			self.M.remove(dim)

			# self.plotG(i0,i,j)
			empE = list(self.g.edges(j))
			Wei = {}
			for u, v in empE:
				w = np.exp(-self.V * self.weights(u, v) / self.T)
				if ((u, v) == dim or (v, u) == dim):
					rw = w
				else:
					Wei[(u, v)] = w
			wei = list(Wei.values())
			S = sum(wei) + rw
			n = random.uniform(0, 1)
			cn = []
			for kk in range(1,len(wei)+1):
				su = 0
				for kk1 in range(kk):
					su += wei[kk1]
				cn.append(su/S)
			for i in range(len(wei)):     #3):
				if (n < cn[i]):
					a, b = list(Wei.keys())[list(Wei.values()).index(wei[i])]
					flag = True
					break
				else:
					flag = False
			if (flag == False):
				count += 1
				if count > 10:                               #For Staggered
					a,b = random.choice(empE)                #For Staggered
				else:
					a,b = dim
			self.M.append((a, b))
			visit.append(j)
			k = next(iter(set((a, b)).difference(set((j, -10)))))
			i = k
		return visit

	def worm(self,sweeps):
		Mlist = []
		while sweeps>0:
			print(sweeps)
			visit = []
			fs,ts,fo,to = self.OrdP()
			D1.append(fs / ts)
			D2.append(fo / to)
			E.append(self.V*(np.exp(-self.w_sq/self.T) * fs + np.exp(-self.w_o/self.T) * fo))
			# Nfp.append(fs + fo)
			while len(set(self.Nodes).difference(set(visit))) >= 0.15*len(self.Nodes):
				i0 = random.choice(self.Nodes)
				i = i0
				k = -1
				visit.append(i0)
				visit = self.worm_single(k,i,i0,visit)
			sweeps -= 1
			Mlist.append(self.M.copy())
		fs, ts, fo, to = self.OrdP()
		print(fs, ts, fo, to)
		D1.append(fs / ts)
		D2.append(fo / to)
		E.append(self.V*(np.exp(-self.w_sq/self.T) * fs + np.exp(-self.w_o/self.T) * fo))
		# Nfp.append(fs + fo)
		return D1, D2, Nfp, E, self.M, Mlist, [fs, ts, fo, to]

g = pickle.load(open('../3DegLattices/SqOct/SqOct12_PBC.txt','rb'))
pos = pickle.load(open('../3DegLattices/SqOct/Pos_SqOct12_PBC.txt','rb'))
pos = {u:np.array(v) for u,v in pos.items()}
PL_HC = pickle.load(open('../3DegLattices/SqOct/Plaqs_SqOct12_PBC.txt','rb'))
print(len(g.nodes()),len(PL_HC))

e = []
M = nx.bipartite.hopcroft_karp_matching(g)
ME = []
for u,v in M.items():
	if((u,v) not in ME and (v,u) not in ME):
		ME.append((u,v))

Dt1 = []
Dt2 = []
Nfpt = []
Cv = []
EC = []
err = []
FP = []

swps = [80]*200
T = [0.009,0.08569231,0.16238462,0.23907692,0.31576923,0.39246154,0.46915385,0.54584615] + list(np.linspace(0.6,3,30)) + list(np.linspace(0.009,5,40))[24:] + list(np.linspace(0.009,10,40))[20:] + list(np.linspace(0.01,75,80))[11:]
T = T[:47]
T = T[:4]+list(np.linspace(0.3,1.3,20))+T[17:]
V = -1

for k in range(0,len(T)):  #-1,-1,-1):
	print(V,T[k])
	'''
	D1 = []
	D2 = []
	Nfp = []
	E = []

	# ME = pickle.load(open('../3DegLattices/SqOct/FS_weights/FS_sqoct12_wsq=-10_T=%.2f_V=%.2f.txt'%(T[k],V), 'rb'))
	obj = EWorm(ME,PL_HC,g,e,T=T[k],V=V,w_sq=1,w_o=0)
	# obj.plotG(0, 0, 0)
	D1,D2,_,E,Mm,Mlist,fp = obj.worm(swps[k])

	pickle.dump(Mm, open('../3DegLattices/SqOct/FS_weights/FS_sqoct12_wsq=1_T=%.2f_V=%.2f.txt'%(T[k],V), 'wb'))
	print(len(Mlist),Mlist[0]==Mlist[-1],Mlist[-1]==Mlist[55],Mlist[55]==Mlist[-7])
	pickle.dump(Mlist[10:], open('../3DegLattices/SqOct/FS_weights/Mlist_sqoct12_wsq=1_T=%.2f_V=%.2f.txt' % (T[k],V), 'wb'))
	pickle.dump(D1, open('../3DegLattices/SqOct/FS_weights/OP1_sqoct12_wsq=1_T=%.2f_V=%.2f.txt' % (T[k],V), 'wb'))
	pickle.dump(D2, open('../3DegLattices/SqOct/FS_weights/OP2_sqoct12_wsq=1_T=%.2f_V=%.2f.txt' % (T[k], V), 'wb'))
	# pickle.dump(Nfp, open('../3DegLattices/SqOct/FS_weights/NFP_sqoct12_wsq=1_T=%.2f_V=%.2f.txt' % (T[k],V),'wb'))
	pickle.dump(E, open('../3DegLattices/SqOct/FS_weights/Eng_sqoct12_wsq=1_T=%.2f_V=%.2f.txt' % (T[k], V), 'wb'))
	'''
	E = pickle.load(open('../3DegLattices/SqOct/FS_weights/Eng_sqoct12_wsq=1_T=%.2f_V=%.2f.txt' % (T[k], V), 'rb'))
	D1 = pickle.load(open('../3DegLattices/SqOct/FS_weights/OP1_sqoct12_wsq=1_T=%.2f_V=%.2f.txt' % (T[k], V), 'rb'))
	D2 = pickle.load(open('../3DegLattices/SqOct/FS_weights/OP2_sqoct12_wsq=1_T=%.2f_V=%.2f.txt' % (T[k], V), 'rb'))

	# FP.append(fp)
	E = np.array(E[10:])
	EC.append(1 - np.mean(E**4)/(3*np.mean(E**2)**2))
	Cv.append((np.mean(E**2) - np.mean(E)**2) / (1152*T[k]**2))  # np.mean(E)/1720  EC   1720,348(884),36
	Dt1.append(np.mean(D1[10:]))
	Dt2.append(np.mean(D2[10:]))
	# Nfpt.append(np.mean(Nfp[10:]))
	# err.append(np.std(Nfp[10:])/np.sqrt(len(Nfp[10:])))
	'''
	pylab.ion()
	plt.clf()
	plt.plot(list(range(len(D1))), D1, label='T=%0.2f' % T[k])
	plt.scatter(list(range(len(D1))), D1, s=5)
	plt.plot(list(range(len(D2))), D2, label='T=%0.2f' % T[k])
	plt.scatter(list(range(len(D2))), D2, s=5)
	plt.legend()
	plt.ylim(-0.1, 1.1)
	pause(2)
	plt.clf()
	plt.plot(list(range(len(E))), E, label='T=%0.2f' % T[k])
	plt.scatter(list(range(len(E))), E, s=5)
	plt.legend()
	pause(0.1)
	pylab.show()
	# plt.ylim(0,1) #len(PL_HC))
	# plt.show()
	'''

print(Dt1)
print(Dt2)
# print(Nfpt)
# print(err)
print(Cv)
print(EC)
print(FP)

# Modified Weights
# T = [0.009,0.08569231,0.16238462,0.23907692,0.31576923,0.39246154,0.46915385,0.54584615] + list(np.linspace(0.6,3,30)) + list(np.linspace(0.009,5,40))[24:] + list(np.linspace(0.009,10,40))[20:] + list(np.linspace(0.01,75,80))[11:]
# T = T[:47]
# Dt1 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0004890453834115806, 0.00029342723004694836, 0.007531298904538341, 0.1746381064162754, 0.48381259780907665, 0.5425469483568075, 0.6022104851330206, 0.6570324726134585, 0.6621674491392802, 0.6593798904538342, 0.6947378716744913, 0.7049100156494523, 0.6943955399061033, 0.7096537558685446, 0.7005086071987481, 0.7251564945226917, 0.7240805946791862, 0.7089690923317683, 0.7303403755868545, 0.7253521126760565, 0.7156690140845069, 0.7327856025039124, 0.7235426447574335, 0.7076486697965573, 0.710044992175274, 0.7157179186228483, 0.7219776995305164, 0.7097026604068857, 0.7029049295774648, 0.713174882629108, 0.7117077464788732, 0.7047143974960877, 0.727112676056338, 0.6951291079812205, 0.6949334898278561, 0.6983079029733957, 0.7046654929577464, 0.7098493740219092, 0.693075117370892, 0.702024647887324]
# Dt2 = [1.0, 1.0, 1.0, 1.0, 1.0, 0.9998043818466354, 0.9992175273865415, 0.9955496870109545, 0.9928110328638498, 0.9613654147104851, 0.6831964006259781, 0.38443857589984354, 0.34414123630672927, 0.3002738654147106, 0.26393779342723, 0.2537656494522692, 0.24892410015649452, 0.22730829420970267, 0.21312597809076686, 0.21684272300469487, 0.2053501564945227, 0.20784428794992177, 0.1937108763693271, 0.19160798122065725, 0.19219483568075119, 0.18422339593114243, 0.18021322378716745, 0.1853971048513302, 0.18060446009389672, 0.18153364632237876, 0.18143583724569642, 0.18104460093896713, 0.1760074334898278, 0.17625195618153364, 0.1801154147104851, 0.17669209702660407, 0.1733665884194053, 0.17424687010954618, 0.17786580594679188, 0.16793818466353677, 0.17674100156494524, 0.17136150234741784, 0.17282863849765262, 0.17356220657276994, 0.16764475743348983, 0.17512715179968696, 0.16554186228482]
# Cv = [0.0, 0.0, 0.0, 0.0, 0.0, 0.001252145043792652, 0.003354710368117319, 0.023749964715716238, 0.020891638081997777, 0.3510030672004043, 2.1733281282609194, 0.16533941084167544, 0.07888506900077918, 0.055971558084166394, 0.042846395475341255, 0.032687131718121, 0.02225611061061186, 0.016800952956170408, 0.027298414534672643, 0.017454056111099174, 0.02175680246448632, 0.01933899013563024, 0.014117195041791857, 0.014236601419271912, 0.010831898807304589, 0.014840645800530954, 0.01110199243062944, 0.01006991281958376, 0.00972473946138395, 0.007953023570698242, 0.010407223100722358, 0.009107824367674433, 0.006100900336601541, 0.008319702666794304, 0.008944525618295304, 0.008452951751728211, 0.006679553832445965, 0.006283602203735078, 0.006170348700044744, 0.006059331092701317, 0.00566650953884683, 0.005929816592888853, 0.004974150733214572, 0.004643000213924085, 0.005013812849827762, 0.005243948171757095, 0.004549604287639175]
# EC = [0.6666666666666667, 0.6666666666666667, 0.6666666666666667, 0.6666666666666667, 0.6666666666666667, 0.6666631418242475, 0.6666531400296609, 0.6665384808930446, 0.6665275143088831, 0.6638357922190726, 0.6242006942964711, 0.6588562256274508, 0.6620913391324763, 0.6627503534723721, 0.6632121812774208, 0.6637008796295737, 0.6644803376496884, 0.6648326643917157, 0.6634918517735569, 0.6644357605861317, 0.6636296838047051, 0.6637954297739665, 0.6644374412982024, 0.6642876203397379, 0.6646994653649734, 0.6638569684017044, 0.6644068421376972, 0.6645153489857162, 0.6645015196155661, 0.6647790344171802, 0.6640028840751739, 0.664269819096613, 0.6649198875835397, 0.6642702170982433, 0.6638888754699848, 0.6639046636264267, 0.664393425758613, 0.6643923534089125, 0.6643726478448237, 0.6642882598368234, 0.6642570352821298, 0.6639550893466044, 0.6642297261199771, 0.6643158843101316, 0.6640062496300886, 0.6637058031660286, 0.6639176717855644]
# FP = [[0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 281, 288], [13, 288, 238, 288], [151, 288, 100, 288], [124, 288, 115, 288], [141, 288, 103, 288], [160, 288, 82, 288], [222, 288, 54, 288], [177, 288, 87, 288], [180, 288, 68, 288], [227, 288, 61, 288], [214, 288, 58, 288], [185, 288, 69, 288], [199, 288, 53, 288], [204, 288, 58, 288], [220, 288, 61, 288], [192, 288, 60, 288], [194, 288, 42, 288], [210, 288, 55, 288], [216, 288, 44, 288], [205, 288, 61, 288], [240, 288, 50, 288], [216, 288, 60, 288], [195, 288, 49, 288], [191, 288, 57, 288], [200, 288, 59, 288], [227, 288, 37, 288], [226, 288, 47, 288], [212, 288, 51, 288], [200, 288, 58, 288], [218, 288, 45, 288], [207, 288, 53, 288], [197, 288, 54, 288], [218, 288, 43, 288], [218, 288, 44, 288], [210, 288, 46, 288], [195, 288, 56, 288], [189, 288, 55, 288], [201, 288, 50, 288]]

# T = np.linspace(0.3,1.3,20)
# Dt1 =[0.0, 0.0, 0.0, 9.780907668231611e-05, 0.0, 0.00029342723004694836, 0.0008802816901408451, 0.004743740219092332, 0.024550078247261343, 0.23117175273865417, 0.42336658841940533, 0.48185641627543035, 0.5377053990610328, 0.5743838028169013, 0.6208431142410014, 0.6196694053208138, 0.6455888106416275, 0.6459800469483569, 0.6673513302034428, 0.6756651017214398]
# Dt2 = [0.9998043818466354, 1.0, 0.9998043818466354, 0.999413145539906, 0.9973102503912364, 0.9930066510172145, 0.9895344287949922, 0.9723200312989047, 0.9194542253521126, 0.609839593114241, 0.4218016431924883, 0.38204225352112675, 0.3458528951486698, 0.31724374021909235, 0.28511345852895154, 0.2827660406885759, 0.2622750391236307, 0.2592429577464788, 0.24691901408450703, 0.2350841158059468]
# Cv = [0.002142921867985417, 0.0, 0.0011742879320432822, 0.004343936406413475, 0.011933295493202885, 0.03098383418058661, 0.041546406355858954, 0.1471493029098607, 0.73546913971277, 0.9767816996731373, 0.17288105611703278, 0.15185790409261, 0.15516903451234731, 0.06432584060737466, 0.04302389562882308, 0.039659354518472995, 0.03220107315411562, 0.030138806058741637, 0.0364792729381524, 0.022685588621987378]
# EC = [0.6666631418242475, 0.6666666666666667, 0.6666631418242475, 0.666650169969464, 0.6666098734389185, 0.6664875358434099, 0.6663755265171627, 0.6654733498349448, 0.6594823644917092, 0.6424510136045565, 0.6593864621861922, 0.6586591362374532, 0.6566005403374622, 0.6624280922385573, 0.6634818975869246, 0.6635507827644633, 0.6638720965147946, 0.6638687102422557, 0.6630861392172107, 0.6642853160406696]
# FP = [[0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 284, 288], [0, 288, 288, 288], [3, 288, 268, 288], [19, 288, 228, 288], [88, 288, 135, 288], [145, 288, 127, 288], [156, 288, 94, 288], [139, 288, 112, 288], [188, 288, 84, 288], [197, 288, 67, 288], [192, 288, 63, 288], [192, 288, 65, 288], [176, 288, 87, 288], [207, 288, 56, 288]]

# pickle.dump([T,Nfpt[::-1],err[::-1]],open('../3DegLattices/Hexa/NFPvsT_hexa24_V=%.2f.txt' % (V),'wb'))
# pickle.dump([T,Cv[::-1]],open('../3DegLattices/Hexa/CvNvsT_hexa24_V=%.2f.txt' % (V),'wb'))
# pickle.dump([T,EC[::-1]],open('../3DegLattices/Hexa/ECvsT_hexa24_V=%.2f.txt' % (V),'wb'))

plt.scatter(T[::],Dt1,s = 20,label='V=%.2f %s' % (-1,'SQ'))
plt.plot(T[::],Dt1)
plt.scatter(T[::],Dt2,s = 20,label='V=%.2f %s' % (-1,'Octagon'))
plt.plot(T[::],Dt2)
plt.legend()
plt.xlabel('T')
plt.ylabel('<NFP>')
plt.show()

print(T[13])
plt.scatter(abs(T[14::]-T[13]),Cv[14:],s = 20,label='V=%.2f' % (-1))
plt.plot(abs(T[14::]-T[13]),Cv[14:])
# plt.scatter(T[::],Cv[:],s = 20,label='V=%.2f' % (-1))
# plt.plot(T[::],Cv[:])
# plt.axvline(x = 1.90848101, color = 'y', linestyle='--', linewidth=1, label='T=%.2f' % (1.90848101))
# plt.axvline(x = 2.85772152, color = 'r', linestyle='--', linewidth=1, label='Tc=%.2f' % (2.85772152))
plt.legend()
plt.xlabel('T')
plt.ylabel('Specific Heat')
plt.xscale('log')
plt.yscale('log')
plt.show()

plt.scatter(T[::],EC,s = 20,label='V=%.2f' % (-1))
plt.plot(T[::],EC)
plt.axhline(y = 2/3, color = 'gray', linestyle='--', linewidth=1, label='%.4f' % (2/3))
# plt.axvline(x = 1.90848101, color = 'y', linestyle='--', linewidth=1, label='T=%.2f' % (1.90848101))
# plt.axvline(x = 2.85772152, color = 'r', linestyle='--', linewidth=1, label='Tc=%.2f' % (2.85772152))
plt.legend()
plt.xlabel('T')
plt.ylabel('Energy Cummulant')
plt.show()

# plt.plot(T[::],Nfpt)
# plt.errorbar(T, Nfpt[::], yerr=err[::], fmt='o', capsize=5)
# plt.show()

'''
plt.rc('text', usetex=True)
plt.rc('font', family='serif')
fig, axs = plt.subplots(1, 1, figsize=(60,60), sharex=True, sharey=True)  #(78,78)

Str = [('../ModifiedTiling/FinalStates/1NFPvsT_(k,R)=(10,10)_V=%.2f.txt','Penrose',816,[6,0]),('../RandomG/FS/1NFPvsT_L=200_V=%.2f.txt','Random',443,[6,0]),('../CorreFns/Data_Plantri/1NFPvsT_20_15k_V=%.2f.txt','Plantri',19,[6,0]),('../3DegLattices/Hexa/NFPvsT_hexa24_V=%.2f.txt','HC',576,[3,0]),('../3DegLattices/SqOct/NFPvsT_sqoct12_V=%.2f.txt','Sq-Oct',529,[6,0])]

V = [-10]  #,10]
maxF = {'Penrose':640,'Random':344,'Plantri':14}
# lim = [0,0]
for i in range(len(V)):
	for s,name in Str:
		T, Cv = pickle.load(open('%s'%s%V[i], 'rb'))   #yerr
		# plt.plot(np.array(T[:len(T)-lim[i]])/10, np.array(Cv[:len(T)-lim[i]])/L, linewidth = 10)    #axs[i]
		# plt.scatter(np.array(T[:len(T)-lim[i]])/10, np.array(Cv[:len(T)-lim[i]])/L, s=1000, label='T=%.2f %s' % (V[i]/10, name))
		# plt.errorbar(np.array(T[:len(T) - lim[i]])/10, np.array(Cv[:len(T)-lim[i]])/L, yerr = np.array(yerr[:len(T) - lim[i]])/L, fmt = '-o', linewidth = 5, capsize=60, markersize=40, markerfacecolor='none',label='V=%.2f %s' % (V[i]/10, name))
		plt.plot(np.array(T[:])/10,Cv[:],linewidth = 10)   #Cv[1:]
		plt.scatter(np.array(T[:])/10,Cv[:],s=1000,label='V=%.2f %s' % (V[i]/10, name))
		# plt.plot(T, np.array(Cv)/L, linewidth=10)
		# plt.scatter(T, np.array(Cv)/L, s=1000, label='T=%.2f %s' % (V[i], name))
		# if i == 0 and name in ['Penrose','Random','Plantri']:
		# 	line = plt.axhline(y=maxF[name]/L, color = 'gray', linestyle='--', linewidth=10)   #, label='analytical (%s)'%name)
	# plt.legend(loc='upper center', bbox_to_anchor=(0.48, 1.18), fontsize=165, ncol=4, columnspacing=0.1, handletextpad=0.002, frameon=False)
	plt.legend(loc='lower right', fontsize=180)
	plt.ylim(bottom=0.614,top=0.67)    #0,top=0.25)   #0.07)
	plt.xlim(left=0)  #,right=4)

plt.xlabel(r'Separation $(r)$',fontsize = 210)  #280)    #   #fig.supylabel   Temperature $(T)$  Separation $(r)$
plt.ylabel(r'FKT Monomer Correlations',fontsize = 210) #300)   #FKT Monomer Correlations     \langle NFP \rangle  C_v/N
plt.tick_params(axis='x', labelsize=160,length=60, width=10)  #200,length=100, width=10)  # Increase x-axis numbers size
plt.tick_params(axis='y', labelsize=160,length=60, width=10)
# plt.axvline(x=8.5, color='gray', linestyle='--', linewidth=2, label='Tc = 8.5')
plt.legend(loc='lower left', fontsize = 180)  #bbox_to_anchor=(1, 0.5)
# plt.xscale('log')
plt.yscale('log')
# plt.ylim(bottom=-0.02)   #0.662,top=0.667)   (10**-8,0)
plt.xlim(left=0) #,right=0.2)
plt.savefig('../../papers/RandomFieldTheory/FKT_P.pdf')
plt.show()
'''

# Del3
# ___________________________________________________________________________________________ #

# T = np.linspace(0.01,75,80)
# Dt1 = [0.0, 0.001755189255189255, 0.04895451770451771, 0.06425518925518926, 0.07772435897435899, 0.10038919413919416, 0.11725427350427349, 0.14308608058608058, 0.153731684981685, 0.1736874236874237, 0.19528388278388278, 0.21916971916971914, 0.2263812576312576, 0.25202228327228327, 0.2628968253968254, 0.2751831501831502, 0.2878891941391941, 0.30692918192918195, 0.31868131868131866, 0.3393620268620268, 0.33161630036630035, 0.35340354090354087, 0.36183608058608063, 0.35798229548229554, 0.3678647741147741, 0.3879731379731381, 0.4026251526251527, 0.4026251526251525, 0.3987332112332112, 0.4253663003663004, 0.41666666666666674, 0.4296016483516483, 0.43009768009767996, 0.43681318681318676, 0.46394230769230776, 0.4527625152625153, 0.45196123321123327, 0.4655830280830281, 0.4483745421245421, 0.47233669108669096, 0.48015873015873023, 0.4662698412698412, 0.47061965811965806, 0.48656898656898656, 0.4802350427350428, 0.48489010989011005, 0.4916437728937729, 0.48374542124542136, 0.5054945054945055, 0.4922542735042735, 0.509119352869353, 0.5103021978021979, 0.5169413919413919, 0.5102640415140415, 0.5093101343101344, 0.5205662393162394, 0.5146138583638582, 0.5174374236874237, 0.5246108058608059, 0.5246108058608059, 0.522245115995116, 0.5340735653235652, 0.5257936507936508, 0.5142704517704518, 0.5262515262515263, 0.5305250305250305, 0.526327838827839, 0.5306013431013431, 0.5491071428571428, 0.5360958485958487, 0.5422008547008547, 0.543040293040293, 0.5483440170940173, 0.5320131257631258, 0.5413232600732599, 0.5493742368742369, 0.5432310744810745, 0.5471611721611721, 0.5362103174603176, 0.5417048229548229]
# Dt2 = [1.0, 0.9010607448107449, 0.5296092796092796, 0.4586004273504274, 0.41178266178266176, 0.38507326007326004, 0.37274877899877906, 0.3562652625152626, 0.3464972527472528, 0.33062423687423687, 0.32329822954822957, 0.30322802197802196, 0.31459859584859584, 0.29899267399267404, 0.2983440170940171, 0.29403235653235654, 0.2887667887667888, 0.27777777777777785, 0.27003205128205127, 0.27331349206349204, 0.2681242368742369, 0.266025641025641, 0.25984432234432236, 0.25770757020757024, 0.2594246031746032, 0.251984126984127, 0.24553571428571427, 0.2484355921855922, 0.2488553113553114, 0.2387057387057387, 0.2375992063492063, 0.23412698412698416, 0.23981227106227104, 0.23191391941391948, 0.2276404151404151, 0.2310744810744811, 0.23130341880341884, 0.2319520757020757, 0.2309600122100122, 0.22508394383394384, 0.22592338217338223, 0.22668650793650796, 0.2279838217338217, 0.2211156898656899, 0.22256562881562889, 0.22241300366300368, 0.21978021978021978, 0.21859737484737485, 0.2152777777777778, 0.21665140415140416, 0.2124923687423687, 0.21375152625152627, 0.20978327228327226, 0.21336996336996342, 0.21211080586080588, 0.20612026862026864, 0.21417124542124544, 0.21062271062271062, 0.20798992673992678, 0.20875305250305254, 0.21024114774114777, 0.20016788766788768, 0.20577686202686202, 0.21199633699633702, 0.20913461538461534, 0.20692155067155063, 0.20673076923076922, 0.20783730158730157, 0.2011599511599511, 0.20661630036630035, 0.20550976800976797, 0.20009157509157507, 0.2000534188034188, 0.20917277167277165, 0.2018849206349207, 0.2010836385836386, 0.20287698412698416, 0.2018086080586081, 0.20276251526251532, 0.20188492063492064]
# Cv = [0.0, 0.47798418094572137, 1.0455204276008108, 0.708068141901784, 0.35017316752472505, 0.3421520687763641, 0.2764590560127147, 0.31126019519659215, 0.15628526895802528, 0.21252718941552293, 0.15954454728604717, 0.13492369354038383, 0.14888277485598805, 0.1504661538698631, 0.11508593085222654, 0.0933220391987712, 0.12683165532552415, 0.09466708568824131, 0.09277741131103003, 0.09709648293959694, 0.07080343588787853, 0.08511630860786987, 0.07317877805050758, 0.06029041907224357, 0.060003473338543535, 0.044243345631510195, 0.05128327189995061, 0.0532589340684828, 0.04262781924767537, 0.044937655282537306, 0.03830985632677318, 0.038827635655552625, 0.02395972845101608, 0.03627850098497384, 0.03139385160934208, 0.02940767748289003, 0.03190138616854079, 0.033228348948308756, 0.024954699565443637, 0.025803775162041378, 0.025139840540681985, 0.02061688956065083, 0.029619488341254045, 0.021388226922590455, 0.02057620961828283, 0.016888758455756776, 0.01709617266626276, 0.014775880430225182, 0.016189507041077984, 0.013559728035465152, 0.016936693939019445, 0.01304177790031646, 0.012731450853716289, 0.010677080329939102, 0.01170389525701778, 0.01604066163549395, 0.01059358868041973, 0.01126679826240704, 0.00992420492560911, 0.009247185100790777, 0.010407028471573997, 0.008949802645225166, 0.00919276902202418, 0.00872513456838719, 0.006565888774086889, 0.0068276735313151, 0.007433231194934708, 0.007177324910750536, 0.007987210606246856, 0.007645472131034002, 0.006612517865347755, 0.007489004063182461, 0.006390824087998463, 0.006464923657273434, 0.005607323699770314, 0.006471259411031375, 0.004895122424787433, 0.005682300652031163, 0.0057407763530258095, 0.005394547722661324]
# EC = [0.6666666666666667, 0.6578790559992831, 0.12452175642783103, -0.13759861508840476, 0.11377199970451934, 0.30785803597243244, 0.40566174996356463, 0.46064036929385765, 0.558424924854506, 0.5396229456576416, 0.5707255368341528, 0.5983504442661212, 0.5724072835267364, 0.5837352587489699, 0.6026903158351106, 0.6105578137600328, 0.5898500687746018, 0.6084012744027294, 0.6089402109193046, 0.6107749691630948, 0.6195424849674349, 0.6063952848337971, 0.617994488264535, 0.618734505976401, 0.6195717532063293, 0.6325173824613581, 0.6280033677805339, 0.6234364290537475, 0.6288169346402844, 0.629547230328388, 0.6315433274830368, 0.6303601751112597, 0.6432530123362459, 0.6294542322044517, 0.6357564180590995, 0.6359950373526365, 0.6328106132091955, 0.6300724063749669, 0.6356061080083566, 0.6356199764921258, 0.6370178127968473, 0.6398017460025973, 0.6257891118298784, 0.6374400373514355, 0.6344639056089781, 0.6410593830186333, 0.6423206340784988, 0.6417149631688057, 0.6402923519309104, 0.643604249751675, 0.6375032590402407, 0.6429633118918929, 0.6439741495537401, 0.6460871290835517, 0.6456455726697539, 0.634274248762303, 0.6446844877946725, 0.6413362146816035, 0.6439940457149869, 0.6455998871910785, 0.6423977257970104, 0.645900331432056, 0.645244225394324, 0.641903326355722, 0.6499684540358919, 0.6479706374669401, 0.6456373689204151, 0.6462797594098331, 0.6450419446112496, 0.6444033806664256, 0.6476880536120835, 0.6450014052506021, 0.647380137203244, 0.6458253910294554, 0.6482901719300698, 0.6454849782789969, 0.6502456630616538, 0.6471031506408045, 0.6451756188786353, 0.6471042153135957]
# FP = [[0, 288, 288, 288], [0, 288, 269, 288], [11, 288, 162, 288], [32, 288, 120, 288], [20, 288, 124, 288], [47, 288, 80, 288], [39, 288, 97, 288], [41, 288, 80, 288], [45, 288, 126, 288], [43, 288, 96, 288], [54, 288, 94, 288], [60, 288, 94, 288], [55, 288, 95, 288], [71, 288, 84, 288], [58, 288, 92, 288], [89, 288, 89, 288], [85, 288, 85, 288], [115, 288, 71, 288], [92, 288, 86, 288], [90, 288, 73, 288], [87, 288, 88, 288], [93, 288, 80, 288], [96, 288, 71, 288], [114, 288, 75, 288], [118, 288, 72, 288], [122, 288, 61, 288], [86, 288, 78, 288], [119, 288, 79, 288], [85, 288, 80, 288], [109, 288, 73, 288], [125, 288, 76, 288], [116, 288, 85, 288], [129, 288, 67, 288], [119, 288, 52, 288], [133, 288, 66, 288], [127, 288, 73, 288], [142, 288, 70, 288], [148, 288, 64, 288], [150, 288, 58, 288], [139, 288, 71, 288], [150, 288, 61, 288], [128, 288, 75, 288], [160, 288, 57, 288], [143, 288, 61, 288], [167, 288, 52, 288], [149, 288, 65, 288], [186, 288, 48, 288], [106, 288, 76, 288], [137, 288, 75, 288], [146, 288, 55, 288], [145, 288, 69, 288], [169, 288, 50, 288], [146, 288, 58, 288], [141, 288, 70, 288], [92, 288, 81, 288], [164, 288, 57, 288], [163, 288, 62, 288], [169, 288, 54, 288], [147, 288, 63, 288], [116, 288, 80, 288], [152, 288, 58, 288], [138, 288, 66, 288], [112, 288, 73, 288], [151, 288, 62, 288], [141, 288, 67, 288], [185, 288, 50, 288], [140, 288, 54, 288], [174, 288, 49, 288], [160, 288, 55, 288], [162, 288, 59, 288], [154, 288, 63, 288], [160, 288, 52, 288], [158, 288, 58, 288], [118, 288, 61, 288], [164, 288, 57, 288], [156, 288, 66, 288], [141, 288, 61, 288], [175, 288, 49, 288], [139, 288, 63, 288], [158, 288, 49, 288]]

# T = np.linspace(0.009,10,40)
# Dt1 = [0.0, 0.0, 0.0, 0.00038156288156288156, 0.003930097680097679, 0.021939865689865688, 0.03063949938949939, 0.04201007326007326, 0.045520451770451775, 0.057577838827838845, 0.0615460927960928, 0.06249999999999999, 0.07532051282051283, 0.07142857142857141, 0.07997557997557997, 0.08615689865689866, 0.0908501221001221, 0.08852258852258853, 0.09546703296703299, 0.10199175824175824, 0.09970238095238095, 0.11065323565323565, 0.10931776556776554, 0.12061202686202685, 0.1261446886446886, 0.12198565323565322, 0.1353785103785104, 0.14125457875457872, 0.14072039072039072, 0.1456425518925519, 0.1484279609279609, 0.16636141636141635, 0.1679639804639805, 0.16834554334554336, 0.17372557997557997, 0.18208180708180707, 0.19150641025641027, 0.2010836385836386, 0.19360500610500608, 0.2079136141636142]
# Dt2 = [1.0, 1.0, 0.9980540293040292, 0.9724511599511598, 0.864812271062271, 0.6828067765567766, 0.6040521978021978, 0.5528083028083028, 0.5111797924297924, 0.48527167277167277, 0.4691315628815629, 0.46333180708180705, 0.4356684981684982, 0.4339896214896215, 0.4198717948717948, 0.4098366910866911, 0.4060973748473749, 0.40396062271062266, 0.39484126984126977, 0.39102564102564097, 0.3863324175824175, 0.3746565934065934, 0.37885378510378503, 0.36530830280830284, 0.3589362026862027, 0.36504120879120877, 0.35714285714285715, 0.35317460317460314, 0.354739010989011, 0.3516483516483517, 0.3465354090354091, 0.3376068376068376, 0.3400106837606838, 0.3429105616605616, 0.33142551892551897, 0.33180708180708185, 0.3227258852258852, 0.3166971916971917, 0.319253663003663, 0.30975274725274726]
# Cv = [0.0, 0.0, 0.008016078323886735, 0.12684082332120283, 0.8351246751162964, 2.08438230557683, 1.5962376598721453, 1.7299270459908398, 0.7983832215435442, 0.9996189589250007, 0.7530313298964832, 0.6520409064380608, 0.605672708525059, 0.4278677437014905, 0.3631022550428483, 0.46803113101246924, 0.48847472113132007, 0.3265962338607652, 0.31189751251632025, 0.37858418647202524, 0.2956539732283949, 0.2724163554893822, 0.2788016737952161, 0.2330801487026729, 0.21331839580002698, 0.20269912269346374, 0.25986584942683455, 0.24815490841573726, 0.20205805364577503, 0.1792127533705953, 0.17653218242802954, 0.2182030336936777, 0.20437495194373792, 0.19979842281410304, 0.14624613556300126, 0.199341341633049, 0.17649859301312254, 0.19293103855142066, 0.14841519275042933, 0.17662966764615096]
# EC = [0.6666666666666667, 0.6666666666666667, 0.666626794852744, 0.6652356703536821, 0.6481419120743892, 0.5274098824245284, 0.4179199844043826, 0.18884742024749246, 0.37240256389503024, -0.03331301338752035, -0.14080143121033073, 0.04862161130083431, 0.07035643283426951, 0.21723533977537157, 0.26066957158623183, 0.33342766580550576, 0.20822579199418667, 0.22281650989568436, 0.3905151450148867, 0.2706019156551468, 0.3466270624063854, 0.4450806291429029, 0.3870003384108299, 0.47949886015340637, 0.51368474512913, 0.4909659704492644, 0.4907516568012201, 0.47348503164349265, 0.5185033076211374, 0.5310854651376014, 0.5211716509068129, 0.5363713639085098, 0.5317477044775623, 0.5274175503485246, 0.5695310402886002, 0.5370729495377974, 0.5641357601088268, 0.555199895121874, 0.5792835339757471, 0.5726989206771846]
# FP = [[0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 276, 288], [5, 288, 227, 288], [1, 288, 224, 288], [9, 288, 168, 288], [11, 288, 152, 288], [21, 288, 139, 288], [4, 288, 154, 288], [21, 288, 113, 288], [23, 288, 141, 288], [28, 288, 105, 288], [26, 288, 118, 288], [30, 288, 119, 288], [21, 288, 126, 288], [24, 288, 118, 288], [31, 288, 108, 288], [28, 288, 119, 288], [22, 288, 118, 288], [30, 288, 119, 288], [22, 288, 133, 288], [27, 288, 128, 288], [27, 288, 118, 288], [59, 288, 99, 288], [25, 288, 144, 288], [35, 288, 97, 288], [41, 288, 96, 288], [56, 288, 80, 288], [45, 288, 105, 288], [57, 288, 97, 288], [44, 288, 108, 288], [40, 288, 106, 288], [45, 288, 97, 288], [31, 288, 102, 288], [41, 288, 85, 288], [71, 288, 82, 288], [77, 288, 85, 288], [33, 288, 122, 288], [79, 288, 90, 288]]

# T = np.linspace(0.009,5,40)
# Dt1 = [0.0, 0.0, 0.0, 0.0, 0.0, 3.8156288156288156e-05, 0.0, 0.0013354700854700855, 0.003891941391941392, 0.011408730158730158, 0.019421550671550672, 0.02594627594627595, 0.03186050061050061, 0.036362942612942616, 0.040560134310134305, 0.04681776556776557, 0.05055708180708182, 0.05318986568986569, 0.05559371184371184, 0.05586080586080586, 0.061278998778998776, 0.06452228327228327, 0.06410256410256408, 0.06394993894993896, 0.06799450549450549, 0.07421398046398046, 0.07520604395604397, 0.07291666666666666, 0.07543498168498168, 0.07833485958485958, 0.0780296092796093, 0.08379120879120878, 0.08535561660561661, 0.08932387057387056, 0.09302503052503051, 0.08940018315018317, 0.098519536019536, 0.09462759462759464, 0.10126678876678878, 0.100503663003663]
# Dt2 = [1.0, 1.0, 1.0, 0.9998473748473748, 0.9974053724053724, 0.9898885836385837, 0.9720695970695971, 0.9217032967032969, 0.8629807692307693, 0.763927045177045, 0.6947115384615384, 0.6454899267399267, 0.6100045787545787, 0.5765796703296703, 0.5477716727716728, 0.531402625152625, 0.5098443223443224, 0.49725274725274726, 0.48378357753357754, 0.47809829059829057, 0.46211080586080594, 0.4589056776556777, 0.4603174603174603, 0.45287698412698413, 0.438148656898657, 0.4207493894993895, 0.43005952380952384, 0.4270451770451771, 0.4307081807081808, 0.4220085470085471, 0.41975732600732596, 0.4072420634920635, 0.4052960927960928, 0.4013659951159951, 0.3928571428571428, 0.3996871184371185, 0.39583333333333337, 0.3883928571428572, 0.3824786324786324, 0.38133394383394387]
# Cv = [0.0, 0.0, 0.0, 0.000977714724545679, 0.011151076952744407, 0.03103808856053655, 0.04792257000955977, 0.35683554033894027, 0.6241432968258631, 1.3150799865238225, 1.9352516585408899, 1.6456334844968559, 2.0392048212636995, 1.396766217851826, 1.5957295860153315, 1.2446663166233003, 1.2665370793436115, 0.9065866765244316, 1.2110209783682082, 0.672271671286681, 0.7640072781668245, 0.7754424305470506, 0.4593639275854569, 0.6596504272867764, 0.5106277407814587, 0.47870511755735556, 0.41593682016109995, 0.4671419256935299, 0.33208298374876394, 0.5326582119204355, 0.4105451253365261, 0.4173563244875453, 0.3498544153772935, 0.35095636459250434, 0.34156523922981324, 0.3141680113911481, 0.41798863012992565, 0.2926203033017281, 0.30202025022485685, 0.2280446034429551]
# EC = [0.6666666666666667, 0.6666666666666667, 0.6666666666666667, 0.6666639083514517, 0.6666112656887467, 0.6664255025122452, 0.6661084761060923, 0.6610425333362453, 0.6513843416499061, 0.6111166705113276, 0.5176407727301793, 0.4360698557024837, 0.4425371248927922, 0.21956409957498735, 0.25693125341753176, 0.18157458539622762, -0.20939609689118766, 0.026572255361099528, -0.43274801973851007, -0.23045406620552988, -0.3309254124979317, -0.3922436063996808, 0.167827633148111, -0.43860386374568994, 0.05947346425909994, 0.250276627519619, 0.11674210686995634, 0.051249629416762366, 0.31177168917853204, -0.12685930534148926, 0.08856082816323207, 0.1723815096730631, 0.3247857723638683, 0.27123935412951716, 0.3695874848677989, 0.32472363056661957, 0.2442202441555923, 0.3500900143245953, 0.3908278769920992, 0.44298406385301425]
# FP = [[0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 265, 288], [0, 288, 237, 288], [6, 288, 182, 288], [2, 288, 208, 288], [6, 288, 189, 288], [18, 288, 141, 288], [2, 288, 185, 288], [21, 288, 158, 288], [4, 288, 189, 288], [13, 288, 154, 288], [11, 288, 141, 288], [11, 288, 161, 288], [14, 288, 166, 288], [20, 288, 114, 288], [23, 288, 149, 288], [18, 288, 147, 288], [16, 288, 150, 288], [18, 288, 127, 288], [19, 288, 117, 288], [22, 288, 143, 288], [20, 288, 135, 288], [11, 288, 154, 288], [23, 288, 140, 288], [27, 288, 87, 288], [32, 288, 97, 288], [18, 288, 135, 288], [21, 288, 110, 288], [23, 288, 118, 288], [41, 288, 88, 288], [23, 288, 126, 288], [13, 288, 95, 288], [39, 288, 91, 288], [29, 288, 106, 288]]

# T = np.linspace(0.6,3,30)
# Dt1 = [0.0, 0.0, 0.00019078144078144078, 0.0008012820512820515, 0.0011446886446886447, 0.0031669719169719174, 0.006562881562881564, 0.011866605616605618, 0.016483516483516487, 0.021100427350427352, 0.02648046398046398, 0.029532967032967032, 0.033615689865689864, 0.040331196581196584, 0.04117063492063492, 0.040521978021978024, 0.042391636141636144, 0.051243894993895, 0.045138888888888895, 0.05559371184371184, 0.05422008547008547, 0.053838522588522585, 0.056623931623931624, 0.057577838827838825, 0.060554029304029304, 0.06341575091575093, 0.059867216117216134, 0.06295787545787546, 0.06898656898656899, 0.07066544566544566]
# Dt2 = [0.9951541514041513, 0.9872939560439562, 0.9696657509157509, 0.9481837606837606, 0.9209401709401708, 0.8769459706959707, 0.8192536630036631, 0.7618284493284492, 0.7188263125763126, 0.6870421245421244, 0.6386217948717948, 0.6152319902319903, 0.5908119658119658, 0.5603250915750916, 0.5470848595848595, 0.5474664224664225, 0.5346077533577533, 0.5058760683760685, 0.5169795482295482, 0.4909188034188033, 0.5054563492063493, 0.49179639804639813, 0.47607600732600724, 0.48187576312576313, 0.47077228327228327, 0.4595924908424908, 0.4545940170940171, 0.4446352258852259, 0.44280372405372403, 0.44490231990231993]
# Cv = [0.016104026806864187, 0.03131756064875755, 0.10584767110264531, 0.49524182626141644, 0.2994090341620556, 0.8573520226388652, 1.1512949466678533, 2.2716586072926996, 1.9477891383998105, 2.1590965595519953, 1.6458504701715628, 1.4320617630513088, 1.470827712493678, 1.8555318850124154, 1.2177916836185685, 0.907321737551832, 1.105507117824081, 1.2184854495106507, 0.8068997017718827, 0.8953392553091819, 0.9264927867718655, 0.7336955932693741, 0.7213079718092466, 0.7170891769172707, 0.6666899201802132, 0.7812869077057615, 0.5822910829527652, 0.4426444034451387, 0.6195134534288356, 0.6399885726808803]
# EC = [0.6665600865026855, 0.6663936779016838, 0.6655257964541422, 0.662063481383798, 0.6615954988632815, 0.6522896712696422, 0.6366502986985485, 0.6061090833856662, 0.5656816729881794, 0.5529530356336987, 0.4109286214889928, 0.3938712233752193, 0.39738849956892586, 0.3403275065561845, 0.1868778124802859, 0.2127085852325682, 0.21254261480971615, -0.5308255968778699, 0.17297778079080772, 0.1110443332099822, -0.38152371827292897, -0.2303317953014461, -0.10716297461857405, -0.03235038148991043, 0.06618893275716098, -0.18915247848900374, -0.5865309782229173, 0.09249365571536194, -0.3880645884260825, -0.3646440892632248]
# FP = [[0, 288, 288, 288], [0, 288, 280, 288], [0, 288, 277, 288], [0, 288, 276, 288], [0, 288, 258, 288], [0, 288, 261, 288], [1, 288, 234, 288], [3, 288, 222, 288], [3, 288, 243, 288], [0, 288, 200, 288], [11, 288, 188, 288], [2, 288, 182, 288], [7, 288, 181, 288], [7, 288, 165, 288], [15, 288, 153, 288], [15, 288, 126, 288], [11, 288, 161, 288], [19, 288, 131, 288], [8, 288, 136, 288], [19, 288, 111, 288], [13, 288, 145, 288], [8, 288, 169, 288], [14, 288, 123, 288], [20, 288, 120, 288], [2, 288, 157, 288], [19, 288, 121, 288], [28, 288, 118, 288], [15, 288, 133, 288], [15, 288, 121, 288], [18, 288, 115, 288]]


# ___________________________________________________________________________________________ #


# Del folder -> w_sq = -10, V = -1, high-T to low-T, T = np.linspace(0,25,50)
# Dt = [0.38270663956639567, 0.40625, 0.4008299457994579, 0.3926151761517615, 0.3727981029810298, 0.3736449864498645, 0.3724593495934959, 0.36026422764227645, 0.35060975609756095, 0.34569783197831977, 0.32740514905149054, 0.33375677506775064, 0.32046070460704607, 0.315210027100271, 0.29878048780487804, 0.30614837398373984, 0.2776084010840108, 0.278370596205962, 0.25872289972899726, 0.24432588075880757, 0.24110772357723573, 0.22569444444444448, 0.2098577235772358, 0.20807926829268292, 0.19122628726287264, 0.18038617886178862, 0.17945460704607047, 0.16971544715447154, 0.1421070460704607, 0.12872628726287264, 0.12830284552845528, 0.10348915989159892, 0.08824525745257453, 0.08646680216802168, 0.07621951219512196, 0.05750338753387533, 0.04717140921409214, 0.018207994579945798, 0.0, 0.0]
# Nfpt = [183.5609756097561, 188.390243902439, 184.1951219512195, 184.82926829268294, 179.3170731707317, 182.3170731707317, 181.17073170731706, 180.02439024390245, 176.41463414634146, 175.3170731707317, 171.0487804878049, 176.34146341463415, 168.3170731707317, 170.21951219512195, 167.9512195121951, 169.14634146341464, 162.29268292682926, 161.58536585365854, 159.14634146341464, 158.85365853658536, 157.90243902439025, 153.46341463414635, 150.53658536585365, 152.0, 146.82926829268294, 144.53658536585365, 145.90243902439025, 144.97560975609755, 143.65853658536585, 138.97560975609755, 141.90243902439025, 139.29268292682926, 140.3170731707317, 138.0487804878049, 144.58536585365854, 156.4878048780488, 163.90243902439025, 212.21951219512195, 285.5609756097561, 284.0]
# Cv = [0.04392029545905243, 0.04685136198155702, 0.05534334915127991, 0.062087724160185494, 0.07148752524614817, 0.042558957185334124, 0.06891271392471052, 0.07957874084145883, 0.05935828925352252, 0.05808179187322362, 0.05009480620645817, 0.09844010779616727, 0.08330918651041393, 0.09738639574657934, 0.1313095335395598, 0.1731800994261847, 0.14906461975217322, 0.13758784546904906, 0.07032953599048192, 0.15365060139054157, 0.11251482155128001, 0.11095462490177087, 0.21721514942086315, 0.16456617306012056, 0.15781141582391395, 0.23936149188408248, 0.21793834027364642, 0.1808587957110513, 0.1462288575277405, 0.2552919177572874, 0.24534648632868444, 0.3341985446255948, 0.42334285592880816, 0.2251249318362086, 0.474161218917311, 0.5661979113994644, 1.6007265235640158, 2.4958955011897683, 0.01628673408685699] #, nan]
# EC = [0.6303145110675619, 0.6335433245923904, 0.6270588147786392, 0.6244733004782831, 0.6148437359052883, 0.6374637865821429, 0.6167517969574523, 0.615227415523287, 0.6266684620849385, 0.6285061491371775, 0.6282739074874957, 0.6158350858499095, 0.6142907708829088, 0.6038595048952489, 0.58174843293839, 0.5518465340215803, 0.5675924730663184, 0.5835148680059213, 0.6242380365712347, 0.57445280092313, 0.5998681088555038, 0.6016114316718242, 0.5350425174073783, 0.5642366306893611, 0.5713340259149187, 0.516319741308556, 0.5597433399480303, 0.5661823908110958, 0.5442990868835242, 0.46946432419778494, 0.5048769793733028, 0.3555018804525253, 0.3029393969194426, 0.4483757298942743, 0.30721975539157653, 0.14141013449420958, 0.31653450268514904, 0.5595228222904765, 0.6665414811438235, 0.6666666666666667]

# Del1 folder -> w_sq = -10, V = -10, low-T to high-T T[::2], T = np.linspace(0.01,25,50)
# Dt = [1.0, 1.0, 1.0, 0.9996612466124662, 0.9963584010840107, 0.9882283197831979, 0.9765413279132793, 0.9302168021680218, 0.851880081300813, 0.7774390243902439, 0.7112127371273712, 0.6443936314363143, 0.5982384823848239, 0.5873983739837398, 0.5536924119241193, 0.544969512195122, 0.5133807588075882, 0.5022865853658537, 0.4779810298102981, 0.49322493224932246]
# Nfpt = [288.0, 288.0, 288.0, 287.9024390243902, 286.9512195121951, 284.609756097561, 281.2439024390244, 268.390243902439, 247.0731707317073, 227.0, 209.65853658536585, 194.0, 182.1219512195122, 178.390243902439, 169.85365853658536, 169.29268292682926, 162.41463414634146, 159.58536585365854, 154.9512195121951, 156.90243902439025]
# Cv = [0.0, 0.0, 0.0, 0.002224322119126056, 0.014438586122648289, 0.023119739779121243, 0.038486715112804215, 0.3242710473402573, 1.1231669327131857, 2.1009776827990034, 1.974204576733871, 1.7455347700247237, 1.77332340277078, 1.2653549020115546, 1.0423584326948483, 1.122963297015069, 1.3214476441311087, 1.1397661817971643, 1.289630134804064, 0.5378271092012903]
# EC = [0.6666666666666667, 0.6666666666666667, 0.6666666666666667, 0.6666606230390463, 0.6665965674119569, 0.666488153325553, 0.6662331960724197, 0.6613108812179982, 0.6408812774845648, 0.5950864260113465, 0.5658032359033238, 0.4045148764714086, 0.2884377069072923, 0.44634057244391967, 0.3337955186496957, 0.1555658406706384, 0.09039033846709243, 0.1124598974918759, -0.19231250826160728, -0.24512392762293578]

# Del2 folder -> w_sq = -10, V = -10, low-T to high-T T[::], T = list(np.linspace(0.01,8,10)) + list(np.linspace(9,13,10)) + list(np.linspace(14,50,20))
# Dt1 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00022893772893772896, 0.0010302197802197802, 0.001259157509157509, 0.0031669719169719174, 0.004044566544566545, 0.006944444444444444, 0.0080509768009768, 0.01011141636141636, 0.012248168498168498, 0.0173992673992674, 0.0196504884004884, 0.023733211233211236, 0.032814407814407816, 0.042200854700854704, 0.04826770451770452, 0.047046703296703296, 0.05074786324786325, 0.05677655677655678, 0.06127899877899878, 0.061088217338217336, 0.06742216117216117, 0.07257326007326007, 0.07192460317460318, 0.08066239316239317, 0.0869581807081807, 0.08390567765567766, 0.0889423076923077, 0.08997252747252746, 0.09821428571428571, 0.09947344322344322, 0.09905372405372406]
# Dt2 = [1.0, 1.0, 1.0, 1.0, 1.0, 0.999084249084249, 0.9972527472527473, 0.9929792429792429, 0.9813415750915752, 0.9626449938949939, 0.9285332722832723, 0.920558608058608, 0.8814102564102564, 0.8613400488400488, 0.825091575091575, 0.8073489010989011, 0.7769383394383395, 0.7441620879120879, 0.7061202686202686, 0.6904761904761906, 0.6479319291819293, 0.5925671550671551, 0.5573107448107447, 0.5166361416361417, 0.516559829059829, 0.4936660561660562, 0.47309981684981695, 0.4573031135531136, 0.45486111111111116, 0.4410866910866911, 0.4268543956043956, 0.4263965201465202, 0.4088064713064713, 0.4103708791208791, 0.40480006105006106, 0.40701312576312565, 0.40739468864468864, 0.39308608058608063, 0.3899954212454214, 0.3941163003663004]
# Cv = [0.0, 0.0, 0.0, 0.0, 0.0, 0.004321671740659529, 0.008810005064187264, 0.012900299490661472, 0.03770272522249615, 0.1033518490914705, 0.29428069593923184, 0.22176547263528498, 0.984497829108885, 0.9109398751526827, 1.1932764776827665, 1.494294176249515, 1.6534188787216366, 1.5364839500285012, 2.1115986990988813, 2.0380745023520865, 2.3327079732488736, 1.450788501568368, 1.890380421017661, 0.971060383398694, 0.6716404988776672, 0.6161911762179705, 0.7215996151356306, 0.5770616743413941, 0.5306573417358894, 0.4692217430693136, 0.6388506641882882, 0.4205085796724283, 0.4697996290927406, 0.3744204801082578, 0.34255976898219864, 0.3102749432510191, 0.393577425303298, 0.2925899896991012, 0.334059532842457, 0.39355317225509545]
# EC = [0.6666666666666667, 0.6666666666666667, 0.6666666666666667, 0.6666666666666667, 0.6666666666666667, 0.6666509887107406, 0.6666204828756359, 0.6665733919609655, 0.6663073806413091, 0.6653962921817638, 0.6618454628706256, 0.6624964566647631, 0.6488555035101443, 0.6461732495224524, 0.6331382653755595, 0.6219917793066361, 0.6076477288718969, 0.5961109877329824, 0.560530538970832, 0.5397640661404185, 0.4566270559632476, 0.35458757236087457, 0.06776502459789846, 0.08576058852824009, 0.05439479349004406, -0.042862992343278616, -0.21453415850579094, -0.10075390199314538, -0.09021192966838876, -0.03320708706162967, 0.1397486305739476, 0.14776636681164335, 0.31253365381332243, 0.2362926656918819, 0.38546889411530794, 0.3937729305063701, 0.22325458810082532, 0.3745354004914607, 0.38316705421179476, 0.25651868534651845]
# FP = [[0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [0, 288, 288, 288], [1, 288, 264, 288], [1, 288, 259, 288], [0, 288, 284, 288], [0, 288, 265, 288], [0, 288, 239, 288], [1, 288, 252, 288], [1, 288, 239, 288], [2, 288, 242, 288], [3, 288, 238, 288], [5, 288, 208, 288], [1, 288, 206, 288], [8, 288, 196, 288], [5, 288, 196, 288], [7, 288, 175, 288], [8, 288, 160, 288], [19, 288, 124, 288], [3, 288, 169, 288], [8, 288, 136, 288], [22, 288, 131, 288], [15, 288, 152, 288], [21, 288, 119, 288], [17, 288, 101, 288], [12, 288, 136, 288], [31, 288, 93, 288], [28, 288, 117, 288], [30, 288, 111, 288], [31, 288, 120, 288], [41, 288, 102, 288], [13, 288, 151, 288], [39, 288, 132, 288], [33, 288, 107, 288]]
